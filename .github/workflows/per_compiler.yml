name: Per compiler

on:
  workflow_call:
    inputs:
      cuda_version: {type: string, required: true}
      full_matrix: {type: string, required: true}
      compiler_name: {type: string, required: true}

jobs:

  compute_per_compiler_matrix:
    name: Compute ${{inputs.compiler_name}} matrix  
    runs-on: ubuntu-latest
    outputs:
      MATRIX:  ${{ steps.compute_per_compiler_matrix.outputs.MATRIX }}
    steps:
      - name: Compute Matrix
        id: compute_per_compiler_matrix
        run: |
          FULL_MATRIX= "${{ inputs.full_matrix }}"
          MATRIX=$(echo $FULL_MATRIX | jq -c '[.[] | select(.compiler.name == "${{ inputs.compiler_name }}" and .cuda == "${{ inputs.cuda_version }}")]')
          echo "MATRIX=$MATRIX" | tee -a "$GITHUB_OUTPUT"

  per_compiler:
    name: ${{ inputs.compiler_name }}
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        include: ${{ fromJSON(needs.compute_per_compiler_matrix.outputs.MATRIX) }}
    steps:
      - name: test
        run: |
          echo "CUDA: ${{matrix.cuda_version}} Compiler: ${{ matrix.compiler.name }} ${{ matrix.compiler.version }}"


