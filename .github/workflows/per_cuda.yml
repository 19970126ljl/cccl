name: Dispatch build and test

on:
  workflow_call:
    inputs:
      per_cuda_compiler_matrix: {type: string, required: true}

jobs:
  # Using a matrix to dispatch to the build-and-test reusable workflow for each build configuration
  # ensures that the build/test steps can overlap across different configurations. For example,
  # the build step for CUDA 12.1 + gcc 9.3 can run at the same time as the test step for CUDA 11.0 + clang 11.
  build_and_test:
    name: Build and test ${{matrix.compiler.name}}${{ matrix.compiler.version }}/C++${{matrix.std}}/${{matrix.cpu}}
    uses: ./.github/workflows/build-and-test.yml
    strategy:
      matrix: 
        include: ${{ fromJSON(inputs.per_cuda_compiler_matrix) }}
    with:
      cuda_version: ${{ matrix.cuda }}
      compiler: ${{ matrix.compiler.name }}
      compiler_version: ${{ matrix.compiler.version }}
      std: ${{ matrix.std }}
      gpu_build_archs: "70" #TODO: Fix this
      cpu: ${{ matrix.cpu }}

