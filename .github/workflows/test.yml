name: CI (GPU)

on:
  push:
    branches:
      - main
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-on-${{ github.event_name }}-from-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  cuda12_1:
    if: github.repository == 'NVIDIA/cccl'
    name: Build (CUDA 12.1, ${{ matrix.gcc }}, Ubuntu ${{ matrix.ubuntu }})
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        ubuntu: ["20.04"]
        #cxx: [11, 14, 17]
        #cpu: [amd64, arm64] 
    #runs-on: linux-${{ matrix.cpu }}-cpu4
    runs-on: linux-amd64-cpu4
    container:
      options: -u root
      image: rapidsai/devcontainers:23.06-cpp-gcc${{ matrix.gcc }}-cuda12.1-ubuntu${{ matrix.ubuntu }}
    steps:
      - name: Echo matrix
        run: echo "gcc ${{ matrix.gcc }}, std ${{matrix.cxx}}"
  cuda11_0:
    if: github.repository == 'NVIDIA/cccl'
    name: Build (CUDA 11.0, gcc ${{ matrix.gcc }}, Ubuntu ${{ matrix.ubuntu }})
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        gcc: [7, 8, 9]
        ubuntu: ["18.04"]
        #cxx: [11, 14, 17]
        #cpu: [amd64, arm64] 
    #runs-on: linux-${{ matrix.cpu }}-cpu4
    runs-on: linux-amd64-cpu4
    container:
      options: -u root
      image: rapidsai/devcontainers:23.06-cpp-gcc${{ matrix.gcc }}-cuda11.0-ubuntu${{ matrix.ubuntu }}
    steps:
      - name: Echo matrix
        run: echo "gcc ${{ matrix.gcc }}"